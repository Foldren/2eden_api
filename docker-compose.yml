services:
  psql:
    image: postgres:16.1-alpine3.18
    container_name: db
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PSW}
      POSTGRES_DB: ${PSQL_DB}
      TZ: Europe/Moscow
    ports:
      - 15432:5432
    networks:
      - 2eden_network
    volumes:
      - ./pgtune_init.sql:/docker-entrypoint-initdb.d/init.sql
#      - db_data:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack-server
    container_name: cache
    restart: always
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 16379:6379
    networks:
      - 2eden_network
#    volumes:
#      - cache_data:/data

  fastapi:
    build: .
    container_name: api
    restart: always
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - psql
      - redis
    ports:
      - 38000:8000
    networks:
      - 2eden_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - fastapi
    ports:
      - 2080:80
      - 2443:443
    networks:
      - 2eden_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  2eden_network:

#volumes:
#  db_data:
#  cache_data:
services:
  db:
    image: postgres:16.1-alpine3.18
    container_name: db
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PSW}
      POSTGRES_DB: ${PSQL_DB}
      TZ: Europe/Moscow
    ports:
      - 127.0.0.1:15432:5432
    networks:
      - 2eden_network
    volumes:
      - ./pgtune_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups/db:/var/lib/postgresql/data

  cache:
    image: redis/redis-stack-server
    container_name: cache
    restart: unless-stopped
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 127.0.0.1:16379:6379
    networks:
      - 2eden_network
    volumes:
      - ./backups/cache:/data

  api:
    build: ./services/api
    container_name: api
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - db
      - cache
    ports:
      - 18000:8000
    networks:
      - 2eden_network
    volumes:
      - ./services/api:/home

  sheduler:
    build: ./services/sheduler
    container_name: sheduler
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - api
    tty: true
    networks:
      - 2eden_network
    volumes:
      - ./services/sheduler:/home

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - api
    ports:
      - 180:80
      - 1443:443
    networks:
      - 2eden_network
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/admin:/etc/nginx/admin


networks:
  2eden_network:
    name: 2eden_network